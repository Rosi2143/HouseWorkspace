20:27:58 **** Incremental Build of configuration Debug for project Boost_MSM_BlindTest ****
make all 
Building file: ../src/Boost_MSM_BlindTest.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/Boost_MSM_BlindTest.d" -MT"src/Boost_MSM_BlindTest.o" -o "src/Boost_MSM_BlindTest.o" "../src/Boost_MSM_BlindTest.cpp"
In file included from /usr/include/boost/fusion/container/map/detail/cpp03/map.hpp:20:0,
                 from /usr/include/boost/fusion/container/map/map.hpp:18,
                 from /usr/include/boost/fusion/container/generation/make_map.hpp:11,
                 from /usr/include/boost/fusion/include/make_map.hpp:11,
                 from /usr/include/boost/msm/front/euml/common.hpp:40,
                 from /usr/include/boost/msm/front/euml/euml.hpp:14,
                 from ../src/Boost_MSM_Blinds.h:20,
                 from ../src/Boost_MSM_BlindTest.cpp:12:
/usr/include/boost/fusion/container/map/detail/cpp03/deref_data_impl.hpp: In instantiation of ‘struct boost::fusion::extension::deref_data_impl<boost::fusion::map_iterator_tag>::apply<boost::fusion::basic_iterator<boost::fusion::map_iterator_tag, boost::fusion::map<boost::fusion::pair<BlindsSm::Blind_name_, std::__cxx11::basic_string<char> >, boost::fusion::pair<BlindsSm::Blind_type_, BlindsSm::BlindTypeEnum>, boost::fusion::pair<BlindsSm::Blind_MoveCount_, int>, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_>::category, boost::fusion::map<boost::fusion::pair<BlindsSm::Blind_name_, std::__cxx11::basic_string<char> >, boost::fusion::pair<BlindsSm::Blind_type_, BlindsSm::BlindTypeEnum>, boost::fusion::pair<BlindsSm::Blind_MoveCount_, int>, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_>, 3> >’:
/usr/include/boost/fusion/iterator/basic_iterator.hpp:69:16:   required from ‘struct boost::fusion::basic_iterator<boost::fusion::map_iterator_tag, boost::fusion::map<boost::fusion::pair<BlindsSm::Blind_name_, std::__cxx11::basic_string<char> >, boost::fusion::pair<BlindsSm::Blind_type_, BlindsSm::BlindTypeEnum>, boost::fusion::pair<BlindsSm::Blind_MoveCount_, int>, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_>::category, boost::fusion::map<boost::fusion::pair<BlindsSm::Blind_name_, std::__cxx11::basic_string<char> >, boost::fusion::pair<BlindsSm::Blind_type_, BlindsSm::BlindTypeEnum>, boost::fusion::pair<BlindsSm::Blind_MoveCount_, int>, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_>, 3>::deref_data<boost::fusion::basic_iterator<boost::fusion::map_iterator_tag, boost::fusion::map<boost::fusion::pair<BlindsSm::Blind_name_, std::__cxx11::basic_string<char> >, boost::fusion::pair<BlindsSm::Blind_type_, BlindsSm::BlindTypeEnum>, boost::fusion::pair<BlindsSm::Blind_MoveCount_, int>, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_>::category, boost::fusion::map<boost::fusion::pair<BlindsSm::Blind_name_, std::__cxx11::basic_string<char> >, boost::fusion::pair<BlindsSm::Blind_type_, BlindsSm::BlindTypeEnum>, boost::fusion::pair<BlindsSm::Blind_MoveCount_, int>, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_>, 3> >’
/usr/include/boost/fusion/iterator/deref_data.hpp:27:20:   required from ‘struct boost::fusion::extension::deref_data_impl<boost::fusion::iterator_facade_tag>::apply<boost::fusion::basic_iterator<boost::fusion::map_iterator_tag, boost::fusion::map<boost::fusion::pair<BlindsSm::Blind_name_, std::__cxx11::basic_string<char> >, boost::fusion::pair<BlindsSm::Blind_type_, BlindsSm::BlindTypeEnum>, boost::fusion::pair<BlindsSm::Blind_MoveCount_, int>, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_>::category, boost::fusion::map<boost::fusion::pair<BlindsSm::Blind_name_, std::__cxx11::basic_string<char> >, boost::fusion::pair<BlindsSm::Blind_type_, BlindsSm::BlindTypeEnum>, boost::fusion::pair<BlindsSm::Blind_MoveCount_, int>, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_>, 3> >’
/usr/include/boost/fusion/iterator/deref_data.hpp:36:16:   required from ‘struct boost::fusion::result_of::deref_data<boost::fusion::basic_iterator<boost::fusion::map_iterator_tag, boost::fusion::map<boost::fusion::pair<BlindsSm::Blind_name_, std::__cxx11::basic_string<char> >, boost::fusion::pair<BlindsSm::Blind_type_, BlindsSm::BlindTypeEnum>, boost::fusion::pair<BlindsSm::Blind_MoveCount_, int>, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_>::category, boost::fusion::map<boost::fusion::pair<BlindsSm::Blind_name_, std::__cxx11::basic_string<char> >, boost::fusion::pair<BlindsSm::Blind_type_, BlindsSm::BlindTypeEnum>, boost::fusion::pair<BlindsSm::Blind_MoveCount_, int>, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_>, 3> >’
/usr/include/boost/fusion/sequence/intrinsic/at_key.hpp:39:17:   required from ‘struct boost::fusion::extension::at_key_impl<boost::fusion::map_tag>::apply<boost::fusion::map<boost::fusion::pair<BlindsSm::Blind_name_, std::__cxx11::basic_string<char> >, boost::fusion::pair<BlindsSm::Blind_type_, BlindsSm::BlindTypeEnum>, boost::fusion::pair<BlindsSm::Blind_MoveCount_, int>, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_>, BlindsSm::m_name_>’
/usr/include/boost/fusion/sequence/intrinsic/at_key.hpp:70:16:   required from ‘struct boost::fusion::result_of::at_key<boost::fusion::map<boost::fusion::pair<BlindsSm::Blind_name_, std::__cxx11::basic_string<char> >, boost::fusion::pair<BlindsSm::Blind_type_, BlindsSm::BlindTypeEnum>, boost::fusion::pair<BlindsSm::Blind_MoveCount_, int>, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_>, BlindsSm::m_name_>’
/usr/include/boost/msm/front/detail/common_states.hpp:42:5:   required by substitution of ‘template<class Index> typename boost::add_const<typename boost::fusion::result_of::at_key<Attributes, Index>::type>::type boost::msm::front::detail::inherit_attributes<Attributes>::get_attribute(const Index&) const [with Index = BlindsSm::m_name_]’
../src/Boost_MSM_Blinds.h:256:49:   required from here
src/subdir.mk:18: recipe for target 'src/Boost_MSM_BlindTest.o' failed
/usr/include/boost/fusion/container/map/detail/cpp03/deref_data_impl.hpp:29:73: error: no type named ‘second_type’ in ‘boost::fusion::extension::value_of_impl<boost::fusion::map_iterator_tag>::apply<boost::fusion::basic_iterator<boost::fusion::map_iterator_tag, boost::fusion::map<boost::fusion::pair<BlindsSm::Blind_name_, std::__cxx11::basic_string<char> >, boost::fusion::pair<BlindsSm::Blind_type_, BlindsSm::BlindTypeEnum>, boost::fusion::pair<BlindsSm::Blind_MoveCount_, int>, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_>::category, boost::fusion::map<boost::fusion::pair<BlindsSm::Blind_name_, std::__cxx11::basic_string<char> >, boost::fusion::pair<BlindsSm::Blind_type_, BlindsSm::BlindTypeEnum>, boost::fusion::pair<BlindsSm::Blind_MoveCount_, int>, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_>, 3> >::type {aka struct mpl_::void_}’
             typedef typename result_of::value_of<It>::type::second_type data;
                                                                         ^
/usr/include/boost/fusion/container/map/detail/cpp03/deref_data_impl.hpp:37:13: error: no type named ‘second_type’ in ‘boost::fusion::extension::value_of_impl<boost::fusion::map_iterator_tag>::apply<boost::fusion::basic_iterator<boost::fusion::map_iterator_tag, boost::fusion::map<boost::fusion::pair<BlindsSm::Blind_name_, std::__cxx11::basic_string<char> >, boost::fusion::pair<BlindsSm::Blind_type_, BlindsSm::BlindTypeEnum>, boost::fusion::pair<BlindsSm::Blind_MoveCount_, int>, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_>::category, boost::fusion::map<boost::fusion::pair<BlindsSm::Blind_name_, std::__cxx11::basic_string<char> >, boost::fusion::pair<BlindsSm::Blind_type_, BlindsSm::BlindTypeEnum>, boost::fusion::pair<BlindsSm::Blind_MoveCount_, int>, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_>, 3> >::type {aka struct mpl_::void_}’
             type;
             ^
In file included from ../src/Boost_MSM_BlindTest.cpp:12:0:
../src/Boost_MSM_Blinds.h: In function ‘void BlindsSm::pstate(const blind&)’:
../src/Boost_MSM_Blinds.h:256:49: error: no matching function for call to ‘boost::msm::back::state_machine<boost::msm::front::euml::func_state_machine<BlindsSm::blind_tag, BlindsSm::transition_table_helper, boost::mpl::v_mask<boost::mpl::v_item<boost::msm::front::euml::func_state<BlindsSm::BlindSomeWheretag, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list1<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<BlindsSm::BlindSomeWhere_entry_impl>, 0l> >, 1l> >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::phoenix::detail::tag::function_eval, boost::proto::argsns_::list1<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<BlindsSm::BlindSomeWhere_exit_impl>, 0l> >, 1l> >, boost::fusion::vector<>, boost::mpl::vector0<mpl_::na>, boost::mpl::vector0<mpl_::na>, boost::msm::front::default_base_state>, boost::mpl::v_item<boost::msm::front::euml::define_init<>, boost::mpl::vector0<mpl_::na>, 0>, 0>, 1>, boost::msm::front::ActionSequence_<boost::mpl::vector<boost::msm::front::euml::NoAction, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::msm::front::ActionSequence_<boost::mpl::vector<boost::msm::front::euml::NoAction, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::fusion::map<boost::fusion::pair<BlindsSm::Blind_name_, std::__cxx11::basic_string<char> >, boost::fusion::pair<BlindsSm::Blind_type_, BlindsSm::BlindTypeEnum>, boost::fusion::pair<BlindsSm::Blind_MoveCount_, int>, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_>, boost::mpl::vector0<mpl_::na>, boost::mpl::vector0<mpl_::na>, boost::mpl::vector0<mpl_::na>, boost::msm::front::ActionSequence_<boost::mpl::vector<Log_No_Transition_impl, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na> >, boost::msm::front::euml::NoAction, boost::msm::front::default_base_state> >::get_attribute(const BlindsSm::m_name_&) const’
    std::cout << " -> " << p.get_attribute(m_name) << "-"/*<< p.get_attribute(m_type)*/  << std::endl;
                                                 ^
In file included from /usr/include/boost/msm/front/common_states.hpp:19:0,
                 from /usr/include/boost/msm/front/euml/state_grammar.hpp:28,
                 from /usr/include/boost/msm/front/euml/guard_grammar.hpp:16,
                 from /usr/include/boost/msm/front/euml/euml.hpp:16,
                 from ../src/Boost_MSM_Blinds.h:20,
                 from ../src/Boost_MSM_BlindTest.cpp:12:
/usr/include/boost/msm/front/detail/common_states.hpp:33:5: note: candidate: template<class Index> typename boost::fusion::result_of::at_key<Attributes, Index>::type boost::msm::front::detail::inherit_attributes<Attributes>::get_attribute(const Index&) [with Index = Index; Attributes = boost::fusion::map<boost::fusion::pair<BlindsSm::Blind_name_, std::__cxx11::basic_string<char> >, boost::fusion::pair<BlindsSm::Blind_type_, BlindsSm::BlindTypeEnum>, boost::fusion::pair<BlindsSm::Blind_MoveCount_, int>, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_>]
     get_attribute(Index const&) 
     ^
/usr/include/boost/msm/front/detail/common_states.hpp:33:5: note:   template argument deduction/substitution failed:
/usr/include/boost/msm/front/detail/common_states.hpp:42:5: note: candidate: template<class Index> typename boost::add_const<typename boost::fusion::result_of::at_key<Attributes, Index>::type>::type boost::msm::front::detail::inherit_attributes<Attributes>::get_attribute(const Index&) const [with Index = Index; Attributes = boost::fusion::map<boost::fusion::pair<BlindsSm::Blind_name_, std::__cxx11::basic_string<char> >, boost::fusion::pair<BlindsSm::Blind_type_, BlindsSm::BlindTypeEnum>, boost::fusion::pair<BlindsSm::Blind_MoveCount_, int>, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_, boost::fusion::void_>]
     get_attribute(Index const&)const 
     ^
/usr/include/boost/msm/front/detail/common_states.hpp:42:5: note:   substitution of deduced template arguments resulted in errors seen above
make: *** [src/Boost_MSM_BlindTest.o] Error 1

20:31:17 Build Finished (took 3m:19s.106ms)

