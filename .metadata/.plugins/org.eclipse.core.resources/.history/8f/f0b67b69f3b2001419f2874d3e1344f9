/*
 * Switch.h
 *
 *  Created on: Jan 25, 2015
 *      Author: micha
 */

#ifndef SWITCH_H
#define SWITCH_H

#include <string>
#include <list>

enum SwitchState
{
   Unknown,
   Released,
   Pressed,
   LongPressed,
   VeryLongPressed,
   Jammed
}SwitchState;

typedef int (*t_SwitchActionFunction)(/*int,int*/);

class Room;

class Switch {
public:
      Switch(unsigned int _Id, std::string _Name, const Room* _pRoom);
      ~Switch();

      // access functions
      std::string getName() const {return Name;}
      SwitchState getState() const {return State;}

      // construction functions
      void addAction(const SwitchState& state, t_SwitchActionFunction _function);
protected:
      SwitchState  State;
      std::string  Name;
      unsigned int Id;
      Room*        pRoom;
      std::map<SwitchState, t_SwitchActionFunction> switchActionMap;
};

#endif /* SWITCH_H */
