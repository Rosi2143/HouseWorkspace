/*
 * main.cpp
 *
 *  Created on: Jan 25, 2015
 *      Author: micha
 */

#include <gtest/gtest.h>
#include <gmock/gmock.h>

#include "Time.h"

using namespace std;
using namespace boost::gregorian;
using ::testing::_;
using ::testing::Return;
using ::testing::Invoke;
using ::testing::TestWithParam;
using ::testing::Values;
using ::testing::StrCaseEq;

TEST(TimeTest, Presses_OK) {
   PressTime _pressTime;
   _pressTime.ShortPressTimeMs    = 500;
   _pressTime.LongPressTimeMs     = 1000;
   _pressTime.VeryLongPressTimeMs = 3000;
   _pressTime.JammedPressTimeMs   = 10000;
   Time _time(_pressTime);
   ASSERT_EQ(ShortPressed,    _time.evalPressType(boost::posix_time::milliseconds(000000)));
   ASSERT_EQ(ShortPressed,    _time.evalPressType(boost::posix_time::milliseconds(000499)));
   ASSERT_EQ(LongPressed,     _time.evalPressType(boost::posix_time::milliseconds(000500)));
   ASSERT_EQ(LongPressed,     _time.evalPressType(boost::posix_time::milliseconds(000999)));
   ASSERT_EQ(VeryLongPressed, _time.evalPressType(boost::posix_time::milliseconds(001000)));
   ASSERT_EQ(VeryLongPressed, _time.evalPressType(boost::posix_time::milliseconds(002999)));
   ASSERT_EQ(Jammed,          _time.evalPressType(boost::posix_time::milliseconds(003000)));
   ASSERT_EQ(Jammed,          _time.evalPressType(boost::posix_time::milliseconds(009999)));
   ASSERT_EQ(Jammed,          _time.evalPressType(boost::posix_time::milliseconds(010000)));
   ASSERT_EQ(Jammed,          _time.evalPressType(boost::posix_time::milliseconds(100000)));
}

