/*
 * Room.h
 *
 *  Created on: Jan 25, 2015
 *      Author: micha
 */

#ifndef ROOM_H
#define ROOM_H

#include <string>
#include <list>

class Room
{
   public:
      Room(std::string _name);
      ~Room();

      // access functions
      std::string   getName() const {return Name;}
      const Light&  getLight (std::string name) const;
      const Heater& getHeater(std::string name) const;
      const Blind&  getBlind (std::string name) const;
      const Switch& getSwitch(std::string name) const;

      // construction functions
      void addLight (const Light&  _Light);
      void addHeater(const Heater& _Heater);
      void addBlind (const Blind&  _Blind);
      void addSwitch(const Switch& _Switch);

   protected:
      Room(){}
      std::string Name;
      std::vector<Light&>  Lights;
      std::vector<Heater&> Heaters;
      std::vector<Blind&>  Blinds;
      std::vector<Switch&> Switches;
};

typedef std::vector<Room> Rooms;

#endif /* ROOM_H */
