/*
 * iBlind.h
 *
 *  Created on: Jan 25, 2015
 *      Author: micha
 */

#ifndef IBLIND_H
#define IBLIND_H

#include <string>
#include <list>

typedef enum BlindState
{
   BlindUp,
   BlindMovingDown,
   BlindDown,
   BlindMovingUp,
   BlindSomeWhere
}BlindState;

class Room;

class Blind {
public:
      Blind(unsigned int _Id, std::string _Name, const Room* _pRoom);
      ~Blind();

      // access functions
      std::string getName() const {return Name;}
      BlindState  getState() const {return State;}
      BlindState  moveUp();
      BlindState  moveDown();

      // construction functions
protected:
      BlindState  State;
      std::string Name;
      unsigned int Id;
      Room*        pRoom;
};

#endif /* IBLIND_H */
