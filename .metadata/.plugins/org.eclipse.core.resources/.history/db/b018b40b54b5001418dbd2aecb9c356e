/*
 * House.h
 *
 *  Created on: Jan 25, 2015
 *      Author: micha
 */

#ifndef IHOUSE_H_
#define IHOUSE_H_

#include <string>
#include <list>
#include <exception>

class Floor;

typedef boost::gregorian::date Date;
typedef std::vector<Floor*> FloorsPtr;


struct ptree {
      std::string data;     // data associated with the node
      std::list<std::pair<std::string, ptree> > children; // ordered list of named children
};


class iHouse {
public:
      iHouse();
      ~iHouse();
      void readHouseXml(const std::string &filename) = 0;

      // access functions
      unsigned int getVersion() const = 0;
      std::string  getName() const = 0;

      // handling floors
      unsigned int getNumberOfFloors() const;
      const Floor& getFloor(std::string name) const;

      // handling rooms
      unsigned int getNumberOfRooms() const;
      const Room& getRoom(std::string name) const;

      // handling Switches
      unsigned int getNumberOfSwitches() const;
      const Switch& getSwitch(unsigned int ID) const;

      // construction functions
      void addFloor(const Floor& _Floor);
protected:
      unsigned int Version;
      std::string Name;
      FloorsPtr FloorList;
};

#endif /* IHOUSE_H_ */
