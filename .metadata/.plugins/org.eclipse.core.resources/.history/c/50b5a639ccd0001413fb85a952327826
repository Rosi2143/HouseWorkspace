/*
 * BlindSwitchIn.cpp
 *
 *  Created on: Mar 3, 2015
 *      Author: micha
 */

#include <iostream>

#include "BlindSwitchIn.h"
#include "Room.h"

/*!
 *
 * @param Id
 * @param Name
 * @param pRoom
 */
BlindSwitchIn::BlindSwitchIn(unsigned int Id, std::string Name, iRoom* pRoom):
iBlindSwitchIn(Id, Name, pRoom), _State(BlindOff)
{
   if (_pRoom != nullptr) {
      _Name = _pRoom->getName() + "_" + Name;
   }
}

/*!
 * CopyConstructor
 * @param Blind
 */
BlindSwitchIn::BlindSwitchIn(const BlindSwitchIn& Blind) :
      iBlindSwitchIn(Blind), _State(Blind.getState()){
}

BlindSwitchIn& BlindSwitchIn::operator=(const BlindSwitchIn& other) {
   if (&other == this) {
      return *this;
   }
   Base::operator=(other);
   _State = other._State;
   return *this;
}
/*!
 * toggle the state of the BlindSwitch
 * @return
 */
BlindSwitchInState BlindSwitchIn::toggleState(){
   if(BlindOff == _State) {
      _State = BlindOn;
      _BaseState = true;
   }
   else {
      _State = BlindOff;
      _BaseState = false;
   }
   return _State;
}

