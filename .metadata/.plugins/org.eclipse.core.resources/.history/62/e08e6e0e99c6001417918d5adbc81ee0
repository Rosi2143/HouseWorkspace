/*
 * iLightSwitchIn.h
 *
 *  Created on: Jan 25, 2015
 *      Author: micha
 */

#ifndef ILIGHTSWITCHIN_H_
#define ILIGHTSWITCHIN_H_

#include <string>
#include <list>
#include <iostream>

#include "Base.h"

typedef enum LightState {
   LightOn, LightOff
} SwitchInState;

class iRoom;

class iSwitchIn: public Base {
   public:
      // Constructors
      iSwitchIn(unsigned int Id, std::string Name, iRoom* pRoom) :
            Base(Id, Name, pRoom) {
      }
      ;
      iSwitchIn(const iSwitchIn& light) :
            Base(light) {
      }  // copy constructor
      virtual ~iSwitchIn() {
      }

      // Operators
      //virtual iSwitchIn& operator=(const iSwitchIn& other) = 0;

      // access functions
      virtual SwitchInState getState() const = 0;
      virtual SwitchInState toggleState() = 0;

      // construction functions
   protected:
      iSwitchIn() :
            Base(0, "", nullptr) {
         std::cout << "Wrong default constructor iSwitchIn";
      }
};

#endif /* ILIGHTSWITCHIN_H_ */
