/*
 * iHeater.h
 *
 *  Created on: Jan 25, 2015
 *      Author: micha
 */

#ifndef IHEATER_H
#define IHEATER_H

#include <string>
#include <list>
#include <iostream>

#include "Base.h"

typedef enum HeaterState
{
   HeaterOn,
   HeaterOff
}HeaterState;

class Room;

class iHeater: public Base {
public:
      // Constructors
      iHeater(unsigned int Id, std::string Name, const Room* pRoom):Base(Id, Name, pRoom){};
      iHeater(const iHeater& heater);  // copy constructor
      virtual ~iHeater(){}

      // Operators
      virtual iHeater& operator=(const iHeater& other) = 0;

      // access functions
      virtual HeaterState  getState() const = 0;
      virtual HeaterState  toggleState() = 0;

      // construction functions
protected:
      iHeater(): Base(0, "", nullptr){
         std::cout << "Wrong default constructor iHeater";
      }
};

#endif /* IHEATER_H */
